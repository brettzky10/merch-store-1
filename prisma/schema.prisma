

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model owner {
  id                String     @id @default(uuid())
  email             String?    @unique
  user_id           String
  name              String?
  customerId        String?    @unique
  orders            order[]
  products          product[]

  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}


model product {
  id          String @id @default(uuid())
  name          String
  priceInCents  Int
  quantity      Int  @default(1)
  imagePath     String
  description String @default("")
  isAvailableForPurchase     Boolean @default(true)
  discountCodes discount[]

  owner               owner     @relation( fields: [ownerId], references: [id])
  ownerId             String

  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model discount {
  id             String           @id @default(uuid())
  code           String           @unique
  discountAmount Int
  discountType   discountCodeType
  uses           Int              @default(0)
  isActive       Boolean          @default(true)
  allProducts    Boolean          @default(false)
  createdAt      DateTime         @default(now())
  limit          Int?
  expiresAt      DateTime?
  storeId        String
  products       product[]
  orders          order[]
}

enum discountCodeType {
  PERCENTAGE
  FIXED
}


model order{
  id String @id @default(uuid())
  owner  owner     @relation(fields: [ownerId], references: [id])
  ownerId   String
  amount          Float
  isPaid          Boolean @default(false)
  phone           String @default("")

  status          orderStatus   @default(awaiting_shipment)

  shippingAddress   shippingAddress? @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId String?
  billingAddress    billingAddress?  @relation(fields: [billingAddressId], references: [id])
  billingAddressId  String?


  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  configurationId String
  configuration   configuration @relation(fields: [configurationId], references: [id])

  discountCodeId  String?
  discountCode    discount? @relation(fields: [discountCodeId], references: [id], onDelete: Restrict)

}


model shippingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      order[]
}

model billingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      order[]
}

model configuration {
  id              String        @id @default(cuid())
  width           Int
  height          Int
  imageUrl        String
  color           caseColor?
  model           phoneModel?
  material        caseMaterial?
  finish          caseFinish?
  croppedImageUrl String?
  Order           order[]
}

enum orderStatus {
  fulfilled
  shipped
  awaiting_shipment
}

enum phoneModel {
  iphonex
  iphone11
  iphone12
  iphone13
  iphone14
  iphone15
}

enum caseMaterial {
  silicone
  polycarbonate
}

enum caseFinish {
  smooth
  textured
}

enum caseColor {
  black
  blue
  rose
}


model printfulOrder {
  id               Int      @id @default(autoincrement())
  externalId       String   @unique
  status           String
  shippingMethod   String
  shippingService   String
  createdAt        DateTime
  updatedAt        DateTime
  recipientName    String
  recipientAddress String
  recipientCity    String
  recipientState   String
  recipientCountry String
  recipientZip     String
  recipientPhone   String
  recipientEmail   String
  totalCost        Float
  currency         String
  costsCurrency    String?
  costsSubtotal    Float?
  costsDiscount    Float?
  costsShipping    Float?
  costsDigitization Float?
  costsAdditional   Float?
  costsTax        String?
  costsVat        Float?
  costsTotal      Float?
  retailCurrency  String?
  retailSubtotal  Float?
  retailDiscount   Float?
  retailShipping   Float?
  retailTotal      Float?
  dashboardUrl     String?
  trackingUrl          String?
  shipDate             DateTime?
  hasIncompleteItems   Boolean   @default(false)
  hasDiscontinuedItems Boolean   @default(false)
  hasOutOfStockItems   Boolean   @default(false)
}